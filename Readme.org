#+title: EasyEmacsPKM

* Purpose

This guide is designed to provide a foundation of a "PKM", that mean "Personal Knowledge Management (system)". A "PKM" , is a set of method used to collect, organize, store, and share information by an individual, enhancing personal effectiveness and facilitating learning. Normally, a "PKM" is a set of tools. Here, the goal of this project/guide is to centralize all of this.

In this guide, we need to install two softwares to setup the new PKM :

1. Git in this setup is used here to effortlessly update your setup. 
2. Emacs serves as the central platform for your Personal Knowledge Management (PKM). Its extensive customizability and adaptability make it ideal for tailoring a system that can handle all your information management needs, from note-taking and task management to calendar integration and coding.

* Installation

** Download and Install Git

*** Installation

*Windows:*
1. Download the Git installer from the official Git website: [[https://gitforwindows.org/][git download]].
2. Run the downloaded `.exe` file to start the installer.
3. Follow the installation prompts. Make sure to choose options that add Git to your PATH, which makes it accessible from the command prompt.
4. To verify installation, open PowerShell and type `git --version`. It should return the installed version of Git.

*macOS:*
1. The easiest way to install Git on macOS is to install the Xcode Command Line Tools. Open a terminal and type:
   #+begin_src sh
   xcode-select --install
   #+end_src
2. Click 'Install' when prompted to install the command line developer tools.
3. After installation, verify Git is installed by typing `git --version` in the terminal.

*Linux:*
1. Open a terminal.
2. Update your package list using the package manager, then install Git.
   - For Debian/Ubuntu:
     #+begin_src sh
     sudo apt update
     sudo apt install git
     #+end_src
     
   - For Fedora:
     #+begin_src sh
     sudo dnf install git
     #+end_src

   - For Arch Linux:
     #+begin_src sh
     sudo pacman -S git
     #+end_src
     
3. Verify the installation by typing `git --version` in the terminal.


*** Configuration

*On all OS*,  configure your Git username and email : type the following commands, replacing Your Name and your_email@example.com with your actual name and email:
- git config --global user.name "Your Name"
- git config --global user.email "your_email@example.com"

** Download and Install Emacs

- *Windows*:
  download and execute the [[http://gnu.c3sl.ufpr.br/ftp/emacs/windows/emacs-28/emacs-28.2-installer.exe][executable from source]].
- *MacOS*:
  - Do the command:
    #+begin_src sh

      # Emacs can be installed on MacOS using Homebrew.
      brew install --cask emacs
      # Using MacPorts:
      # sudo port install emacs-app

    #+end_src
- *Linux*:
  #+begin_src sh

    # guix package -i emacs
    sudo apt-get install emacs
    # sudo pacman -S emacs
    # sudo dnf install emacs
    # sudo zypper install emacs

  #+end_src

- Choose the version suitable for your operating system. It is recommended to download at least version 28 for compatibility with most packages.
- Follow the installation instructions on the website for your specific OS.


** Extra dependencies

For *Windows*:
- C Compiler
  - Download and use the installer in the [[https://www.msys2.org][official MSYS2 website]]
  - Extract the installer of the folder and execute the installer
  - Follow the instruction by clicking "Next"
  - At the end, run MSYS2 and, in its terminal, (where you can type), type the following : pacman -S gcc
  - Answer “Y”
  - Now we will add "C:\msys64\usr\bin" to the PATH in your environmental variables :
    - Search for "Environment Variables" in Windows Search, OR Go to Windows Explorer > Right click on "This PC" > Properties > Advanced system settings > Environment Variables
    - At the bottom "System Variables" panel, look for a Variable named "Path" and double click on it.
    - Click on "New", and add this :
      C:\msys64\usr\bin.
      If the previous method (Click on "New") don't work, add this at the end :
      ; C:\msys64\usr\bin
    - Click Ok, Ok

Finish ! Well done !

** Setup the PKM

*Windows, macOS, and Linux:*

1. First, ensure that you have Git installed (as per the instructions above).
2. Do the same for Emacs (as per the instructions above).
3. Open your command line interface (PowerShell for Windows, Terminal for macOS and Linux).
4. Navigate to your home directory:
   - *Windows*:
     #+begin_src sh
       cd $env:APPDATA
       # or
       # cd %USERPROFILE%\AppData
     #+end_src
   - *macOS/Linux*:
     #+begin_src sh
     cd ~
     #+end_src
     
5. If you already have a `.emacs.d` directory and you want to replace it, you should rename or remove the existing directory:
   - *All OS*:
     #+begin_src sh
     mv .emacs.d .emacs.d.backup
     #+end_src
     
6. Clone the repository:
   #+begin_src sh
   git clone https://github.com/Cletip/projetZZ2.git .emacs.d
   #+end_src
   
   This command creates a new `.emacs.d` directory with the contents of the repository.

7. Once the cloning, download and install fonts :
   1. Open the directory where fonts are

      - *Windows*:
	#+begin_src sh
	  Invoke-Item .\.emacs.d\fonts\
	#+end_src
      - *macOS*:
	#+begin_src sh
	  open ./.emacs.d/fonts/
	#+end_src
      - *Linux*
	#+begin_src sh
	  xdg-open ./.emacs.d/fonts/
	#+end_src

   2. Install all the fonts by double-clicking on each one (and maybe click "install" after).

8. Now, you can launch Emacs like any other program.
   - The first time you start Emacs, it might take a while to load as it configures itself. The first loading time can vary between 5 and 20 minutes, depending on your internet connection and your computer.
   - If everything goes well, you will see the tutorial. Just read through it and learn how to use Emacs.

* Update

1. Open your command line interface:
   Windows: Open PowerShell.
   macOS/Linux: Open Terminal.
2. Navigate to your .emacs.d directory in your home directory: All OS:
    #+begin_src sh
   cd ~/.emacs.d
     #+end_src

3. Pull the latest changes from the repository. This command fetches the updated data from the remote repository (e.g., GitHub) and then merges it into your local repository: All OS:
   #+begin_src sh
     git pull
   #+end_src

4. Restart Emacs to apply the updates.



* Contributor

The aim to this project is to facilitate the adoption of Emacs by people, using the concept of PKM.

** Main files and directory

- init.org:
  This file acts as the configuration backbone for the entire PKM system. It contains settings and customization scripts that tailor the environment to your specific needs. When Emacs starts, it loads the settings from this file to set up the PKM system according to the predefined configurations.
- directory "PKM"
  - directory "tutorial"
    - tutorial.org:
       Main file for the comprehensive tutorial designed to help users understand how to use the PKM system effectively. It includes step-by-step instructions, examples, and tips to guide users through the various features and functionalities of the system. This document has to be the most friendly possible.
    - other files :
      used to facilated the explanation of tutorial.org
  - data
    used to store the other files that are not a note
    - directory "export"
      all the exportation of notes will go here
    - directory "org-attach"
      files attached with a heading
- personal.org:
  This file is meant for the user’s personal code. It serves as a personal configuration. It must no be create, because the git will ignore it.
